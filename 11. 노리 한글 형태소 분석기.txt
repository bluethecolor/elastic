https://esbook.kimjmin.net/06-text-analysis/6.7-stemming/6.7.2-nori

- nori 설치

각 노드의 elasticsearch 폴더에 모두 설치
bin/elasticsearch-plugin install analysis-nori

모두 ./stop.sh로 중단하고 ./start.sh로 다시 시작

<nori analyzer 사용>
GET _analyze
{
  "analyzer": "nori",
  "text": ["동해물과 백두산이"]
}
-----> 동해, 물, 백두, 산

<nori_tokenizer 사용>
GET _analyze
{
  "tokenizer": "nori_tokenizer",
  "text": [
    "동해물과 백두산이"
  ]
}
----> 동해, 물, 과, 백두, 산, 이

- user_dictionary : 사용자 사전이 저장된 파일의 경로를 입력합니다.
- user_dictionary_rules : 사용자 정의 사전을 배열로 입력합니다.
- decompound_mode : 합성어의 저장 방식을 결정합니다. 다음 3개의 값을 사용 가능합니다.

< user_dictionary_rules옵션을 이용하여 사용자 사전 "해물" 을 지정하고 "동해물과" 를 분석>

PUT my_nori
{
  "settings": {
    "analysis": {
      "tokenizer": {
        "my_nori_tokenizer": {
          "type": "nori_tokenizer",
          "user_dictionary_rules": [
            "해물"
          ]
        }
      }
    }
  }
}
----->user_dictionary_rules로 사전에 "해물"이 추가된 상태

GET my_nori/_analyze
{
  "tokenizer": "my_nori_tokenizer",
  "text": [
    "동해물과 백두산이"                                             
  ]
}
-----> 결과: 동, "해물", 과, 백두, 산, 이

추가적인 애널라이저: nori_none, nori_dscard, nori_mixed

 stoptags의 디폴트 값 활용

nori_readingform 토큰 필터는 한자로 된 단어를 한글로 바꾸어 저장



