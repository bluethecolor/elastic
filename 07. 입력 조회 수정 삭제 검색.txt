도큐먼트에 접근하는 URL은 
http://<호스트>:<포트>/<인덱스>/_doc/<도큐먼트 id> 


PUT my_index/_doc/1
{
  "name" : "sangyup",
  "message" : "안녕하세요."
}

GET my_index/_doc/1
GET my_index/_source/1

DELETE my_index/_doc/1 : 인덱스 자체는 찾는데 내용이 없음
DELETE my_index: 인덱스 자체를 삭제해서 인덱스를 못찾음



PUT my_index/_doc/1
{
  "age" : 40
}
---->로 추가하면 기존 내용은 다 사라지고 새로운 put한 내용만 들어감
-> id가 중복이 되기 때문


POST my_index/_doc
{
  "name" : "sangyup",
  "message" : "안녕하세요."
}
----->처럼 id없이 POST 명령어로 추가해주면 id가 자동으로 생성됨으로 새로운 정보 (PUT ~ /_doc은 id 필수)


POST my_index/_update/1
{
  "doc": {
    "age" : 40
  }
}
---->로 POST에 _update를 해주면 동일 id내 기존 내용 유지하며 새로운 내용을 추가 가능!!! (혹은 변경)



<bulk api>

대용량 데이터 색인 (속도 차이 확 남)
여러가지 명령을 한꺼번에 실행하려 할때 사용

POST _bulk
{"index":{"_index":"test", "_id":"1"}}    # 한 줄은 명령줄
{"field":"value one"}                       # 한 줄은 데이터 줄   ---> 이렇게 쌍으로 반복
{"index":{"_index":"test", "_id":"2"}}
{"field":"value two"}
{"delete":{"_index":"test", "_id":"2"}}    # 삭제라서 명령줄만 있고 데이터줄은 x
{"create":{"_index":"test", "_id":"3"}}
{"field":"value three"}
{"update":{"_index":"test", "_id":"1"}}
{"doc":{"field":"value two"}}


GET test/_doc/1


<검색>

GET test/_search?q=three : q옵션으로 특정 값 검색 (띄어쓰기 x)
GET test/_search?q=field:three AND field:value --> field가 three와 value를 포함하는 특정 조건으로 검색

----> 그러나 쿼리문을 사용하여 검색하는 것이 일반적

GET my_index/_search
{
  "query": {
    "match": {
      "message": "안녕하세요"
    }
  }
}
-----> 포함이 아닌 완전 일치해야 검색된다. ex) "안녕"으로 검색하면 조회 x


